<?php

namespace app\modules\frontend\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use app\modules\activity\models\PlayerQuestion;
use app\modules\activity\models\PlayerTreasure;
use app\modules\activity\models\SpinQueue;
use app\modules\activity\models\SpinHistory;
use app\modules\activity\models\Report;
use app\modules\activity\models\Stream;
use app\modules\gameplay\models\Hint;
use app\modules\gameplay\models\Finding;
use app\modules\gameplay\models\Treasure;

/**
 * This is the model class for table "player".
 *
 * @property int $id
 * @property string $username
 * @property string $fullname
 * @property string $email
 * @property string $type
 * @property string $password
 * @property string $password_hash
 * @property string $activkey
 * @property string $auth_key
 * @property int $created
 * @property int $active
 * @property int $academic
 * @property int $status
 * @property string $ts
 *
 * @property PlayerBadge[] $playerBadges
 * @property Badge[] $badges
 * @property PlayerFinding[] $playerFindings
 * @property Finding[] $findings
 * @property PlayerHint[] $playerHints
 * @property Hint[] $hints
 * @property PlayerIp[] $playerIp
 * @property PlayerIp[] $playerIps
 * @property PlayerMac[] $playerMacs
 * @property PlayerQuestion[] $playerQuestions
 * @property PlayerTreasure[] $playerTreasures
 * @property Treasure[] $treasures
 * @property Report[] $reports
 * @property Sessions[] $sessions
 * @property Sshkey $sshkey
 * @property Stream[] $streams
 * @property Team[] $teams
 * @property TeamPlayer $teamPlayer
 * @property Team[] $teams0
 * @property Profile[] $profile
 * @property PlayerSsl[] $playerSsl
 */
class Player extends PlayerAR
{

    public function ban()
    {
      $ban=new \app\modules\frontend\models\BannedPlayer;
      $ban->old_id=$this->id;
      $ban->username=$this->username;
      $ban->email=$this->email;
      $ban->registered_at=$this->created;
      $ban->banned_at=new \yii\db\Expression('NOW()');
      if($ban->save() && $this->delete() !== false)
        return true;
      return false;

    }
    /**
     * {@inheritdoc}
     */
    public function getAuthKey()
    {
        return $this->auth_key;
    }

    public function saveWithSsl()
    {
      if(!$this->save())
        return false;

      $playerSsl=new PlayerSsl();
      $playerSsl->player_id=$this->id;
      $playerSsl->generate();
      if($playerSsl->save())
      {
        return $playerSsl->refresh();
      }
      return false;
    }

    public function mail($content, $subject)
    {
      // Get mailer
      try
      {
        \Yii::$app->mailer->compose()
          ->setFrom([\app\modules\settings\models\Sysconfig::findOne('mail_from')->val => \app\modules\settings\models\Sysconfig::findOne('mail_fromName')->val])
          ->setTo([$this->email=>$this->username])
          ->setSubject($subject)
          ->setTextBody($content)
          ->send();
        \Yii::$app->session->setFlash('success', "The user has been mailed.");
      }
      catch(\Exception $e)
      {
        \Yii::$app->session->setFlash('notice', "Failed to send mail to user.");
        return false;
      }
      return true;
  }

  public function genPassword($password)
  {
    if($password === false or $password === '0')
    {

      $password=Yii::$app->security->generateRandomString(8);
      printf("Autogenerated password: %s\n", $password);
    }
    return $password;
  }

  private function createTeam($team_name,$approved)
  {
      if($team_name === false)
        return;

      $team=Team::findOne(['name'=>$team_name]);
      if($team === null)
      {
        $team=new Team();
        $team->name=$team_name;
        $team->academic=$this->academic;
        $team->token=Yii::$app->security->generateRandomString(20);
        $team->owner_id=$this->id;
        $team->description=$this->username;
        $team->save(false);
        $ts=new \app\modules\activity\models\TeamScore();
        $ts->team_id=$team->id;
        $ts->points=0;
        $ts->save();
      }

      $tp=new TeamPlayer;
      $tp->player_id=$this->id;
      $tp->team_id=$team->id;
      $tp->approved=intval($approved);
      if($team->owner_id===$this->id)
      {
        $tp->approved=1;
      }

      if(!$tp->save())
        printf("Error saving team player\n");
  }

}
